version: "3.3"
services:
  postgres:
    env_file:
      - .env
    image: quay.io/azavea/postgis:2.2-postgres9.5-slim
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=POSTGRES_PASSWORD", "pg_isready", "-U", "district_builder"]
      interval: 15s
      timeout: 5s
      retries: 3

  redis:
    env_file:
      - .env
    image: redis:3.2-alpine
    command: redis-server --requirepass ${KEY_VALUE_STORE_PASSWORD}
    ports:
     - "${KEY_VALUE_STORE_PORT}:${KEY_VALUE_STORE_PORT}"

  nginx:
    image: nginx:1.13.8-alpine
    env_file:
      - .env
    ports:
      - "${WEB_APP_PORT}:${WEB_APP_PORT}"
    volumes:
      - ./nginx/:/etc/nginx/conf.d
      - ./django/publicmapping/static:/opt/static/
      - ./sld:/opt/sld/
      - reports:/opt/reports
    depends_on:
      - django

  django:
    env_file:
      - .env
    build:
      context: ./django/publicmapping
    expose:
      - "${WEB_APP_PORT}"
    volumes:
      - ./django/publicmapping/:/usr/src/app/
      - ./sld/:/opt/sld
      - data:/data
      - reports:/opt/reports
    entrypoint: /usr/local/bin/gunicorn
    command:
      - "--workers=2"
      - "--timeout=60"
      - "--bind=0.0.0.0:${WEB_APP_PORT}"
      - "--reload"
      - "--log-level=debug"
      - "--access-logfile=-"
      - "--error-logfile=-"
      - "-kgevent"
      - "publicmapping.wsgi"
    links:
      - postgres:${DATABASE_HOST}
      - redis:${KEY_VALUE_STORE_HOST}
      - geoserver:${MAP_SERVER_HOST}
    depends_on:
      - config

  celery:
    build:
      context: ./django/publicmapping
    env_file:
      - .env
    volumes:
      - ./django/publicmapping/:/usr/src/app/
      - reports:/opt/reports
    entrypoint: /usr/local/bin/celery
    command:
      - "worker"
      - "--app=publicmapping"
      - "--uid=reporter"
      - "--loglevel=INFO"
    links:
      - postgres:${DATABASE_HOST}
      - redis:${KEY_VALUE_STORE_HOST}

  geoserver:
    build:
      context: ./geoserver
    env_file:
      - .env
    volumes:
      - ./geoserver/data_dir/:/data
      - ./sld/:/data/sld
    ports:
      - "${MAP_SERVER_PORT}:${WEB_APP_PORT}"
    links:
      - postgres:${DATABASE_HOST}

  config:
    build:
      context: ./django/publicmapping
    volumes:
      - ./django/publicmapping/:/usr/src/app/
    entrypoint: /usr/local/bin/python
    command:
      - "generate_settings.py"
      - "config/config.xsd"
      - "config/config.xml"

volumes:
  reports:
  data:
